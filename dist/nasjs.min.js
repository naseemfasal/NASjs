/**
 * NASjs - Beautiful, Lightweight UI Components
 * @version 1.0.1
 * @license MIT
 * @author Your Name
 * @description Framework-agnostic UI component library
 */
!function(t){"use strict";const e={version:"1.0.1",datePicker:function(t={}){const e={selector:".datepicker-input",format:"YYYY-MM-DD",minDate:null,maxDate:null,onSelect:null,...t};return new class{constructor(t){this.config=t,this.currentDate=new Date,this.selectedDate=null,this.activeInput=null,this.picker=null,this.months=["January","February","March","April","May","June","July","August","September","October","November","December"],this.init()}init(){this.createPicker(),this.attachToInputs(),this.attachGlobalEvents()}createPicker(){this.picker=document.createElement("div"),this.picker.className="nasjs-datepicker",this.picker.style.display="none",document.body.appendChild(this.picker)}attachToInputs(){document.querySelectorAll(this.config.selector).forEach(t=>{t.setAttribute("readonly","readonly"),t.style.cursor="pointer",t.addEventListener("click",e=>{e.stopPropagation(),this.show(t)})})}attachGlobalEvents(){document.addEventListener("click",t=>{t.target.closest(".nasjs-datepicker")||t.target.closest(this.config.selector)||this.hide()}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.hide()})}show(t){if(this.activeInput=t,t.value){const e=this.parseDate(t.value);e&&(this.currentDate=new Date(e),this.selectedDate=new Date(e))}this.render(),this.position(t),this.picker.style.display="block",setTimeout(()=>this.picker.classList.add("nasjs-visible"),10)}hide(){this.picker.classList.remove("nasjs-visible"),setTimeout(()=>{this.picker.style.display="none"},200)}position(t){const e=t.getBoundingClientRect(),s=window.innerHeight-e.bottom,n=e.top;let a=e.bottom+window.scrollY+5;s<340&&n>s&&(a=e.top+window.scrollY-340-5),this.picker.style.top=`${a}px`,this.picker.style.left=`${e.left+window.scrollX}px`,setTimeout(()=>{const t=this.picker.getBoundingClientRect();t.right>window.innerWidth&&(this.picker.style.left=window.innerWidth-t.width-10+"px")},0)}render(){const t=this.currentDate.getFullYear(),e=this.currentDate.getMonth();this.picker.innerHTML=`\n            <div class="nasjs-dp-header">\n              <button class="nasjs-dp-nav" data-action="prev">‹</button>\n              <div class="nasjs-dp-selectors">\n                <select class="nasjs-dp-month">${this.renderMonthOptions(e)}</select>\n                <select class="nasjs-dp-year">${this.renderYearOptions(t)}</select>\n              </div>\n              <button class="nasjs-dp-nav" data-action="next">›</button>\n            </div>\n            <div class="nasjs-dp-calendar">\n              ${this.renderDaysHeader()}\n              ${this.renderDays()}\n            </div>\n            <div class="nasjs-dp-footer">\n              <button class="nasjs-dp-btn" data-action="today">Today</button>\n              <button class="nasjs-dp-btn" data-action="clear">Clear</button>\n            </div>\n          `,this.attachPickerEvents()}renderMonthOptions(t){return this.months.map((e,s)=>`<option value="${s}" ${s===t?"selected":""}>${e}</option>`).join("")}renderYearOptions(t){const e=(new Date).getFullYear(),s=e-100;let n="";for(let a=e+10;a>=s;a--)n+=`<option value="${a}" ${a===t?"selected":""}>${a}</option>`;return n}renderDaysHeader(){return`<div class="nasjs-dp-days-header">${["Su","Mo","Tu","We","Th","Fr","Sa"].map(t=>`<div class="nasjs-dp-day-name">${t}</div>`).join("")}</div>`}renderDays(){const t=this.currentDate.getFullYear(),e=this.currentDate.getMonth(),s=new Date(t,e,1).getDay(),n=new Date(t,e+1,0).getDate(),a=new Date(t,e,0).getDate();let i='<div class="nasjs-dp-days-grid">';for(let n=s-1;n>=0;n--){const s=a-n;i+=`<button class="nasjs-dp-day nasjs-dp-day-other" data-action="select" data-day="${s}" data-month="${e-1}" data-year="${t}">${s}</button>`}for(let s=1;s<=n;s++){const n=new Date(t,e,s),a=this.isToday(n),o=this.isSelected(n),c=this.isDisabled(n);i+=`<button class="${["nasjs-dp-day",a?"nasjs-dp-today":"",o?"nasjs-dp-selected":"",c?"nasjs-dp-disabled":""].filter(Boolean).join(" ")}" data-action="select" data-day="${s}" data-month="${e}" data-year="${t}" ${c?"disabled":""}>${s}</button>`}const o=42-(s+n);for(let s=1;s<=o;s++)i+=`<button class="nasjs-dp-day nasjs-dp-day-other" data-action="select" data-day="${s}" data-month="${e+1}" data-year="${t}">${s}</button>`;return i+="</div>",i}attachPickerEvents(){this.picker.addEventListener("click",t=>{t.stopPropagation();const e=t.target.closest("[data-action]");if(!e)return;switch(e.dataset.action){case"prev":this.changeMonth(-1);break;case"next":this.changeMonth(1);break;case"today":this.selectToday();break;case"clear":this.clearDate();break;case"select":this.selectDate(parseInt(e.dataset.year),parseInt(e.dataset.month),parseInt(e.dataset.day))}}),this.picker.querySelector(".nasjs-dp-month").addEventListener("change",t=>{this.currentDate.setMonth(parseInt(t.target.value)),this.render()}),this.picker.querySelector(".nasjs-dp-year").addEventListener("change",t=>{this.currentDate.setFullYear(parseInt(t.target.value)),this.render()})}changeMonth(t){this.currentDate.setMonth(this.currentDate.getMonth()+t),this.render()}selectDate(t,e,s){const n=new Date(t,e,s);this.isDisabled(n)||(this.selectedDate=n,this.activeInput&&(this.activeInput.value=this.formatDate(n),this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.config.onSelect&&this.config.onSelect(n,this.activeInput),this.hide())}selectToday(){const t=new Date;this.currentDate=new Date(t),this.selectDate(t.getFullYear(),t.getMonth(),t.getDate())}clearDate(){this.selectedDate=null,this.activeInput&&(this.activeInput.value="",this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.hide()}isToday(t){const e=new Date;return t.toDateString()===e.toDateString()}isSelected(t){return!!this.selectedDate&&t.toDateString()===this.selectedDate.toDateString()}isDisabled(t){return!!(this.config.minDate&&t<new Date(this.config.minDate))||!!(this.config.maxDate&&t>new Date(this.config.maxDate))}formatDate(t){const e=t.getFullYear(),s=String(t.getMonth()+1).padStart(2,"0"),n=String(t.getDate()).padStart(2,"0");return this.config.format.replace("YYYY",e).replace("MM",s).replace("DD",n)}parseDate(t){const e=t.match(/\d+/g);return!e||e.length<3?null:"DD-MM-YYYY"===this.config.format||"DD/MM/YYYY"===this.config.format?new Date(e[2],e[1]-1,e[0]):new Date(e[0],e[1]-1,e[2])}refresh(){this.attachToInputs()}destroy(){this.picker&&this.picker.parentNode&&this.picker.parentNode.removeChild(this.picker)}}(e)},timePicker:function(t={}){const e={selector:".timepicker-input",format:"12",interval:30,onSelect:null,...t};return new class{constructor(t){this.config=t,this.activeInput=null,this.picker=null,this.init()}init(){this.createPicker(),this.attachToInputs(),this.attachGlobalEvents()}createPicker(){this.picker=document.createElement("div"),this.picker.className="nasjs-timepicker-simple",this.picker.style.display="none",document.body.appendChild(this.picker)}attachToInputs(){document.querySelectorAll(this.config.selector).forEach(t=>{t.setAttribute("readonly","readonly"),t.style.cursor="pointer",t.addEventListener("click",e=>{e.stopPropagation(),this.show(t)})})}attachGlobalEvents(){document.addEventListener("click",t=>{t.target.closest(".nasjs-timepicker-simple")||t.target.closest(this.config.selector)||this.hide()}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.hide()})}generateTimeOptions(){const t=[],e=this.config.interval;for(let s=0;s<24;s++)for(let n=0;n<60;n+=e)if("12"===this.config.format){const e=s<12?"AM":"PM",a=`${String(0===s?12:s>12?s-12:s).padStart(2,"0")}:${String(n).padStart(2,"0")} ${e}`;t.push({value:`${s}:${n}`,display:a})}else{const e=`${String(s).padStart(2,"0")}:${String(n).padStart(2,"0")}`;t.push({value:e,display:e})}return t}show(t){this.activeInput=t,this.render(),this.position(t),this.picker.style.display="block",setTimeout(()=>this.picker.classList.add("nasjs-visible"),10)}hide(){this.picker.classList.remove("nasjs-visible"),setTimeout(()=>{this.picker.style.display="none"},200)}position(t){const e=t.getBoundingClientRect();this.picker.style.top=`${e.bottom+window.scrollY+5}px`,this.picker.style.left=`${e.left+window.scrollX}px`,setTimeout(()=>{const t=this.picker.getBoundingClientRect();t.right>window.innerWidth&&(this.picker.style.left=window.innerWidth-t.width-10+"px")},0)}render(){const t=this.generateTimeOptions(),e=this.activeInput?this.activeInput.value:"";this.picker.innerHTML=`\n            <div class="nasjs-tp-simple-header">\n              <span>Select Time</span>\n              <button class="nasjs-tp-simple-close">×</button>\n            </div>\n            <div class="nasjs-tp-simple-body">\n              <select class="nasjs-tp-simple-select" size="8">\n                <option value="">-- Select Time --</option>\n                ${t.map(t=>`<option value="${t.display}" ${e===t.display?"selected":""}>\n                    ${t.display}\n                  </option>`).join("")}\n              </select>\n            </div>\n            <div class="nasjs-tp-simple-footer">\n              <button class="nasjs-tp-simple-btn" data-action="now">Now</button>\n              <button class="nasjs-tp-simple-btn" data-action="clear">Clear</button>\n            </div>\n          `,this.attachPickerEvents()}attachPickerEvents(){const t=this.picker.querySelector(".nasjs-tp-simple-select"),e=this.picker.querySelector(".nasjs-tp-simple-close");t.addEventListener("change",t=>{t.target.value&&this.selectTime(t.target.value)}),t.addEventListener("dblclick",t=>{t.target.value&&this.selectTime(t.target.value)}),e.addEventListener("click",()=>this.hide()),this.picker.addEventListener("click",t=>{const e=t.target.closest("[data-action]");if(!e)return;const s=e.dataset.action;"now"===s?this.selectNow():"clear"===s&&this.clearTime()})}selectTime(t){this.activeInput&&(this.activeInput.value=t,this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.config.onSelect&&this.config.onSelect(t,this.activeInput),this.hide()}selectNow(){const t=new Date,e=this.config.interval,s=Math.round(t.getMinutes()/e)*e,n=s>=60?(t.getHours()+1)%24:t.getHours(),a=s%60;let i;if("12"===this.config.format){const t=n<12?"AM":"PM";i=`${String(0===n?12:n>12?n-12:n).padStart(2,"0")}:${String(a).padStart(2,"0")} ${t}`}else i=`${String(n).padStart(2,"0")}:${String(a).padStart(2,"0")}`;this.selectTime(i)}clearTime(){this.activeInput&&(this.activeInput.value="",this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.hide()}refresh(){this.attachToInputs()}destroy(){this.picker&&this.picker.parentNode&&this.picker.parentNode.removeChild(this.picker)}}(e)},liveClock:function(t,e={}){const s={format:"12",showSeconds:!0,showDate:!1,...e},n="string"==typeof t?document.querySelector(t):t;if(!n)return console.error("NASjs.liveClock: Element not found"),null;const a=()=>{const t=new Date;let e=t.getHours();const a=String(t.getMinutes()).padStart(2,"0"),i=String(t.getSeconds()).padStart(2,"0");let o="";if("12"===s.format){const t=e>=12?"PM":"AM";e=e%12||12,o=`${String(e).padStart(2,"0")}:${a}`,s.showSeconds&&(o+=`:${i}`),o+=` ${t}`}else o=`${String(e).padStart(2,"0")}:${a}`,s.showSeconds&&(o+=`:${i}`);if(s.showDate){o+=` - ${t.toLocaleDateString("en-US",{weekday:"short",year:"numeric",month:"short",day:"numeric"})}`}n.textContent=o};a();const i=setInterval(a,1e3);return{stop:()=>clearInterval(i),start:()=>(a(),setInterval(a,1e3))}},modal:function(t={}){const e={title:"Modal Title",content:"",buttons:[{text:"OK",class:"nasjs-modal-btn-primary",onClick:null}],closeOnBackdrop:!0,closeOnEscape:!0,onOpen:null,onClose:null,...t},s=document.createElement("div");s.className="nasjs-modal-backdrop";const n=document.createElement("div");n.className="nasjs-modal",n.innerHTML=`\n        <div class="nasjs-modal-content">\n          <div class="nasjs-modal-header">\n            <h3 class="nasjs-modal-title">${e.title}</h3>\n            <button class="nasjs-modal-close">×</button>\n          </div>\n          <div class="nasjs-modal-body">\n            ${e.content}\n          </div>\n          <div class="nasjs-modal-footer">\n            ${e.buttons.map((t,e)=>`<button class="nasjs-modal-btn ${t.class||""}" data-index="${e}">${t.text}</button>`).join("")}\n          </div>\n        </div>\n      `,s.appendChild(n),document.body.appendChild(s),setTimeout(()=>s.classList.add("nasjs-visible"),10),e.onOpen&&e.onOpen();const a=()=>{s.classList.remove("nasjs-visible"),setTimeout(()=>{s.parentNode&&s.parentNode.removeChild(s),e.onClose&&e.onClose()},300)};if(n.querySelector(".nasjs-modal-close").addEventListener("click",a),e.closeOnBackdrop&&s.addEventListener("click",t=>{t.target===s&&a()}),e.closeOnEscape){const t=e=>{"Escape"===e.key&&(a(),document.removeEventListener("keydown",t))};document.addEventListener("keydown",t)}return e.buttons.forEach((t,e)=>{n.querySelector(`[data-index="${e}"]`).addEventListener("click",()=>{t.onClick&&t.onClick(),!1!==t.close&&a()})}),{close:a}},confirm:function(t={}){const e={title:"Confirm",message:"Are you sure?",confirmText:"Yes",cancelText:"No",onConfirm:null,onCancel:null,...t};return this.modal({title:e.title,content:`<p class="nasjs-confirm-message">${e.message}</p>`,buttons:[{text:e.cancelText,class:"nasjs-modal-btn-secondary",onClick:()=>{e.onCancel&&e.onCancel()}},{text:e.confirmText,class:"nasjs-modal-btn-danger",onClick:()=>{e.onConfirm&&e.onConfirm()}}],closeOnBackdrop:!1,closeOnEscape:!0})}};"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define([],function(){return e}):t.NASjs=e}("undefined"!=typeof window?window:this);