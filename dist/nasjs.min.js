/**
 * NASjs - Beautiful, Lightweight UI Components
 * @version 1.0.0
 * @license MIT
 * @author Your Name
 * @description Framework-agnostic UI component library
 */
!function(t){"use strict";const e={version:"1.0.0",datePicker:function(t={}){const e={selector:".datepicker-input",format:"YYYY-MM-DD",minDate:null,maxDate:null,onSelect:null,...t};return new class{constructor(t){this.config=t,this.currentDate=new Date,this.selectedDate=null,this.activeInput=null,this.picker=null,this.months=["January","February","March","April","May","June","July","August","September","October","November","December"],this.init()}init(){this.createPicker(),this.attachToInputs(),this.attachGlobalEvents()}createPicker(){this.picker=document.createElement("div"),this.picker.className="nasjs-datepicker",this.picker.style.display="none",document.body.appendChild(this.picker)}attachToInputs(){document.querySelectorAll(this.config.selector).forEach(t=>{t.setAttribute("readonly","readonly"),t.style.cursor="pointer",t.addEventListener("click",e=>{e.stopPropagation(),this.show(t)})})}attachGlobalEvents(){document.addEventListener("click",t=>{t.target.closest(".nasjs-datepicker")||t.target.closest(this.config.selector)||this.hide()}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.hide()})}show(t){if(this.activeInput=t,t.value){const e=this.parseDate(t.value);e&&(this.currentDate=new Date(e),this.selectedDate=new Date(e))}this.render(),this.position(t),this.picker.style.display="block",setTimeout(()=>this.picker.classList.add("nasjs-visible"),10)}hide(){this.picker.classList.remove("nasjs-visible"),setTimeout(()=>{this.picker.style.display="none"},200)}position(t){const e=t.getBoundingClientRect(),s=window.innerHeight-e.bottom,n=e.top;let i=e.bottom+window.scrollY+5;s<340&&n>s&&(i=e.top+window.scrollY-340-5),this.picker.style.top=`${i}px`,this.picker.style.left=`${e.left+window.scrollX}px`,setTimeout(()=>{const t=this.picker.getBoundingClientRect();t.right>window.innerWidth&&(this.picker.style.left=window.innerWidth-t.width-10+"px")},0)}render(){const t=this.currentDate.getFullYear(),e=this.currentDate.getMonth();this.picker.innerHTML=`\n            <div class="nasjs-dp-header">\n              <button class="nasjs-dp-nav" data-action="prev">‹</button>\n              <div class="nasjs-dp-selectors">\n                <select class="nasjs-dp-month">${this.renderMonthOptions(e)}</select>\n                <select class="nasjs-dp-year">${this.renderYearOptions(t)}</select>\n              </div>\n              <button class="nasjs-dp-nav" data-action="next">›</button>\n            </div>\n            <div class="nasjs-dp-calendar">\n              ${this.renderDaysHeader()}\n              ${this.renderDays()}\n            </div>\n            <div class="nasjs-dp-footer">\n              <button class="nasjs-dp-btn" data-action="today">Today</button>\n              <button class="nasjs-dp-btn" data-action="clear">Clear</button>\n            </div>\n          `,this.attachPickerEvents()}renderMonthOptions(t){return this.months.map((e,s)=>`<option value="${s}" ${s===t?"selected":""}>${e}</option>`).join("")}renderYearOptions(t){const e=(new Date).getFullYear(),s=e-100;let n="";for(let i=e+10;i>=s;i--)n+=`<option value="${i}" ${i===t?"selected":""}>${i}</option>`;return n}renderDaysHeader(){return`<div class="nasjs-dp-days-header">${["Su","Mo","Tu","We","Th","Fr","Sa"].map(t=>`<div class="nasjs-dp-day-name">${t}</div>`).join("")}</div>`}renderDays(){const t=this.currentDate.getFullYear(),e=this.currentDate.getMonth(),s=new Date(t,e,1).getDay(),n=new Date(t,e+1,0).getDate(),i=new Date(t,e,0).getDate();let a='<div class="nasjs-dp-days-grid">';for(let n=s-1;n>=0;n--){const s=i-n;a+=`<button class="nasjs-dp-day nasjs-dp-day-other" data-action="select" data-day="${s}" data-month="${e-1}" data-year="${t}">${s}</button>`}for(let s=1;s<=n;s++){const n=new Date(t,e,s),i=this.isToday(n),o=this.isSelected(n),r=this.isDisabled(n);a+=`<button class="${["nasjs-dp-day",i?"nasjs-dp-today":"",o?"nasjs-dp-selected":"",r?"nasjs-dp-disabled":""].filter(Boolean).join(" ")}" data-action="select" data-day="${s}" data-month="${e}" data-year="${t}" ${r?"disabled":""}>${s}</button>`}const o=42-(s+n);for(let s=1;s<=o;s++)a+=`<button class="nasjs-dp-day nasjs-dp-day-other" data-action="select" data-day="${s}" data-month="${e+1}" data-year="${t}">${s}</button>`;return a+="</div>",a}attachPickerEvents(){this.picker.addEventListener("click",t=>{t.stopPropagation();const e=t.target.closest("[data-action]");if(!e)return;switch(e.dataset.action){case"prev":this.changeMonth(-1);break;case"next":this.changeMonth(1);break;case"today":this.selectToday();break;case"clear":this.clearDate();break;case"select":this.selectDate(parseInt(e.dataset.year),parseInt(e.dataset.month),parseInt(e.dataset.day))}}),this.picker.querySelector(".nasjs-dp-month").addEventListener("change",t=>{this.currentDate.setMonth(parseInt(t.target.value)),this.render()}),this.picker.querySelector(".nasjs-dp-year").addEventListener("change",t=>{this.currentDate.setFullYear(parseInt(t.target.value)),this.render()})}changeMonth(t){this.currentDate.setMonth(this.currentDate.getMonth()+t),this.render()}selectDate(t,e,s){const n=new Date(t,e,s);this.isDisabled(n)||(this.selectedDate=n,this.activeInput&&(this.activeInput.value=this.formatDate(n),this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.config.onSelect&&this.config.onSelect(n,this.activeInput),this.hide())}selectToday(){const t=new Date;this.currentDate=new Date(t),this.selectDate(t.getFullYear(),t.getMonth(),t.getDate())}clearDate(){this.selectedDate=null,this.activeInput&&(this.activeInput.value="",this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.hide()}isToday(t){const e=new Date;return t.toDateString()===e.toDateString()}isSelected(t){return!!this.selectedDate&&t.toDateString()===this.selectedDate.toDateString()}isDisabled(t){return!!(this.config.minDate&&t<new Date(this.config.minDate))||!!(this.config.maxDate&&t>new Date(this.config.maxDate))}formatDate(t){const e=t.getFullYear(),s=String(t.getMonth()+1).padStart(2,"0"),n=String(t.getDate()).padStart(2,"0");return this.config.format.replace("YYYY",e).replace("MM",s).replace("DD",n)}parseDate(t){const e=t.match(/\d+/g);return!e||e.length<3?null:"DD-MM-YYYY"===this.config.format||"DD/MM/YYYY"===this.config.format?new Date(e[2],e[1]-1,e[0]):new Date(e[0],e[1]-1,e[2])}refresh(){this.attachToInputs()}destroy(){this.picker&&this.picker.parentNode&&this.picker.parentNode.removeChild(this.picker)}}(e)},timePicker:function(t={}){const e={selector:".timepicker-input",format:"12",onSelect:null,...t};return new class{constructor(t){this.config=t,this.activeInput=null,this.picker=null,this.hour=12,this.minute=0,this.period="AM",this.init()}init(){this.createPicker(),this.attachToInputs(),this.attachGlobalEvents()}createPicker(){this.picker=document.createElement("div"),this.picker.className="nasjs-timepicker",this.picker.style.display="none",document.body.appendChild(this.picker)}attachToInputs(){document.querySelectorAll(this.config.selector).forEach(t=>{t.setAttribute("readonly","readonly"),t.style.cursor="pointer",t.addEventListener("click",e=>{e.stopPropagation(),this.show(t)})})}attachGlobalEvents(){document.addEventListener("click",t=>{t.target.closest(".nasjs-timepicker")||t.target.closest(this.config.selector)||this.hide()}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.hide()})}show(t){this.activeInput=t,t.value&&this.parseTime(t.value),this.render(),this.position(t),this.picker.style.display="block",setTimeout(()=>this.picker.classList.add("nasjs-visible"),10)}hide(){this.picker.classList.remove("nasjs-visible"),setTimeout(()=>{this.picker.style.display="none"},200)}position(t){const e=t.getBoundingClientRect();this.picker.style.top=`${e.bottom+window.scrollY+5}px`,this.picker.style.left=`${e.left+window.scrollX}px`,setTimeout(()=>{const t=this.picker.getBoundingClientRect();t.right>window.innerWidth&&(this.picker.style.left=window.innerWidth-t.width-10+"px")},0)}render(){this.picker.innerHTML=`\n            <div class="nasjs-tp-container">\n              <div class="nasjs-tp-display">\n                <div class="nasjs-tp-time">\n                  <span class="nasjs-tp-number">${String(this.hour).padStart(2,"0")}</span>\n                  <span class="nasjs-tp-separator">:</span>\n                  <span class="nasjs-tp-number">${String(this.minute).padStart(2,"0")}</span>\n                  ${"12"===this.config.format?`<span class="nasjs-tp-period">${this.period}</span>`:""}\n                </div>\n              </div>\n              \n              <div class="nasjs-tp-controls">\n                <div class="nasjs-tp-column">\n                  <button class="nasjs-tp-btn-up" data-action="hour-up">▲</button>\n                  <div class="nasjs-tp-value">${String(this.hour).padStart(2,"0")}</div>\n                  <button class="nasjs-tp-btn-down" data-action="hour-down">▼</button>\n                  <div class="nasjs-tp-label">Hour</div>\n                </div>\n                \n                <div class="nasjs-tp-separator">:</div>\n                \n                <div class="nasjs-tp-column">\n                  <button class="nasjs-tp-btn-up" data-action="minute-up">▲</button>\n                  <div class="nasjs-tp-value">${String(this.minute).padStart(2,"0")}</div>\n                  <button class="nasjs-tp-btn-down" data-action="minute-down">▼</button>\n                  <div class="nasjs-tp-label">Minute</div>\n                </div>\n                \n                ${"12"===this.config.format?`\n                  <div class="nasjs-tp-column">\n                    <button class="nasjs-tp-btn-period" data-action="toggle-period">\n                      ${this.period}\n                    </button>\n                  </div>\n                `:""}\n              </div>\n              \n              <div class="nasjs-tp-footer">\n                <button class="nasjs-tp-btn-action" data-action="now">Now</button>\n                <button class="nasjs-tp-btn-action" data-action="done">Done</button>\n              </div>\n            </div>\n          `,this.attachPickerEvents()}attachPickerEvents(){this.picker.addEventListener("click",t=>{t.stopPropagation();const e=t.target.closest("[data-action]");if(!e)return;switch(e.dataset.action){case"hour-up":this.hour="12"===this.config.format?12===this.hour?1:this.hour+1:23===this.hour?0:this.hour+1,this.render();break;case"hour-down":this.hour="12"===this.config.format?1===this.hour?12:this.hour-1:0===this.hour?23:this.hour-1,this.render();break;case"minute-up":this.minute=59===this.minute?0:this.minute+1,this.render();break;case"minute-down":this.minute=0===this.minute?59:this.minute-1,this.render();break;case"toggle-period":this.period="AM"===this.period?"PM":"AM",this.render();break;case"now":this.setCurrentTime();break;case"done":this.selectTime()}})}setCurrentTime(){const t=new Date;"12"===this.config.format?(this.hour=t.getHours()%12||12,this.period=t.getHours()>=12?"PM":"AM"):this.hour=t.getHours(),this.minute=t.getMinutes(),this.render()}selectTime(){const t=this.formatTime();this.activeInput&&(this.activeInput.value=t,this.activeInput.dispatchEvent(new Event("change",{bubbles:!0}))),this.config.onSelect&&this.config.onSelect(t,this.activeInput),this.hide()}formatTime(){return"12"===this.config.format?`${String(this.hour).padStart(2,"0")}:${String(this.minute).padStart(2,"0")} ${this.period}`:`${String(this.hour).padStart(2,"0")}:${String(this.minute).padStart(2,"0")}`}parseTime(t){const e=t.match(/(\d+):(\d+)\s*(AM|PM)?/i);e&&(this.hour=parseInt(e[1]),this.minute=parseInt(e[2]),e[3]&&(this.period=e[3].toUpperCase()))}refresh(){this.attachToInputs()}destroy(){this.picker&&this.picker.parentNode&&this.picker.parentNode.removeChild(this.picker)}}(e)},liveClock:function(t,e={}){const s={format:"12",showSeconds:!0,showDate:!1,...e},n="string"==typeof t?document.querySelector(t):t;if(!n)return console.error("NASjs.liveClock: Element not found"),null;const i=()=>{const t=new Date;let e=t.getHours();const i=String(t.getMinutes()).padStart(2,"0"),a=String(t.getSeconds()).padStart(2,"0");let o="";if("12"===s.format){const t=e>=12?"PM":"AM";e=e%12||12,o=`${String(e).padStart(2,"0")}:${i}`,s.showSeconds&&(o+=`:${a}`),o+=` ${t}`}else o=`${String(e).padStart(2,"0")}:${i}`,s.showSeconds&&(o+=`:${a}`);if(s.showDate){o+=` - ${t.toLocaleDateString("en-US",{weekday:"short",year:"numeric",month:"short",day:"numeric"})}`}n.textContent=o};i();const a=setInterval(i,1e3);return{stop:()=>clearInterval(a),start:()=>(i(),setInterval(i,1e3))}},modal:function(t={}){const e={title:"Modal Title",content:"",buttons:[{text:"OK",class:"nasjs-modal-btn-primary",onClick:null}],closeOnBackdrop:!0,closeOnEscape:!0,onOpen:null,onClose:null,...t},s=document.createElement("div");s.className="nasjs-modal-backdrop";const n=document.createElement("div");n.className="nasjs-modal",n.innerHTML=`\n        <div class="nasjs-modal-content">\n          <div class="nasjs-modal-header">\n            <h3 class="nasjs-modal-title">${e.title}</h3>\n            <button class="nasjs-modal-close">×</button>\n          </div>\n          <div class="nasjs-modal-body">\n            ${e.content}\n          </div>\n          <div class="nasjs-modal-footer">\n            ${e.buttons.map((t,e)=>`<button class="nasjs-modal-btn ${t.class||""}" data-index="${e}">${t.text}</button>`).join("")}\n          </div>\n        </div>\n      `,s.appendChild(n),document.body.appendChild(s),setTimeout(()=>s.classList.add("nasjs-visible"),10),e.onOpen&&e.onOpen();const i=()=>{s.classList.remove("nasjs-visible"),setTimeout(()=>{s.parentNode&&s.parentNode.removeChild(s),e.onClose&&e.onClose()},300)};if(n.querySelector(".nasjs-modal-close").addEventListener("click",i),e.closeOnBackdrop&&s.addEventListener("click",t=>{t.target===s&&i()}),e.closeOnEscape){const t=e=>{"Escape"===e.key&&(i(),document.removeEventListener("keydown",t))};document.addEventListener("keydown",t)}return e.buttons.forEach((t,e)=>{n.querySelector(`[data-index="${e}"]`).addEventListener("click",()=>{t.onClick&&t.onClick(),!1!==t.close&&i()})}),{close:i}},confirm:function(t={}){const e={title:"Confirm",message:"Are you sure?",confirmText:"Yes",cancelText:"No",onConfirm:null,onCancel:null,...t};return this.modal({title:e.title,content:`<p class="nasjs-confirm-message">${e.message}</p>`,buttons:[{text:e.cancelText,class:"nasjs-modal-btn-secondary",onClick:()=>{e.onCancel&&e.onCancel()}},{text:e.confirmText,class:"nasjs-modal-btn-danger",onClick:()=>{e.onConfirm&&e.onConfirm()}}],closeOnBackdrop:!1,closeOnEscape:!0})}};"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define([],function(){return e}):t.NASjs=e}("undefined"!=typeof window?window:this);